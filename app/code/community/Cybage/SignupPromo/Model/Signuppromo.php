<?php
/**
 * Cybage Signup Promotion Plugin 
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * It is available on the World Wide Web at:
 * http://opensource.org/licenses/osl-3.0.php
 * If you are unable to access it on the World Wide Web, please send an email
 * To: Support_Magento@cybage.com.  We will  send you a copy of the source file.
 *
 * @category   Signup Promotion Plugin
 * @package    Cybage_SignupPromo
 * @copyright  Copyright (c) 2014 Cybage Software Pvt. Ltd., India
 *             http://www.cybage.com/pages/centers-of-excellence/ecommerce/ecommerce.aspx
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 * @author     Cybage Software Pvt. Ltd. <Support_Magento@cybage.com>
 */

class Cybage_SignupPromo_Model_Signuppromo
{
    const XML_PATH_ENABLED        = 'signuppromo_section/signuppromo_group/active';
    const XML_PATH_SUCCESS_MSG    = 'signuppromo_section/signuppromo_group/success';
    const XML_PATH_EMAIL_TEMPLATE = 'signuppromo_section/signuppromo_group/emailtemplate';
    const XML_PATH_EMAIL_SENDER   = 'signuppromo_section/signuppromo_group/identity';
    const XML_PATH_COUPON_LENGTH  = 'signuppromo_section/signuppromo_group/couponlength';
    const XML_PATH_COUPON_PREFIX  = 'signuppromo_section/signuppromo_group/couponprefix';
    const XML_PATH_COUPON_EXPIRE  = 'signuppromo_section/signuppromo_group/couponexpire';

    private function generatePromoCode($length)
    {
        $rndId = crypt(uniqid(rand(),1));
        $rndId = strip_tags(stripslashes($rndId));
        $rndId = str_replace(array(".", "$"),"",$rndId);
        $rndId = strrev(str_replace("/","",$rndId));

        if (!is_null($rndId)) {
            return Mage::getStoreConfig(self::XML_PATH_COUPON_PREFIX).strtoupper(substr($rndId, 0, $length));
        }
        return strtoupper($rndId);
    }

    public function addPromoCode($customerId, $ruleId)
    {
        $uniqueId =  $this->generatePromoCode(Mage::getStoreConfig(self::XML_PATH_COUPON_LENGTH));
        $coupon = Mage::getModel('salesrule/coupon');
        $createdAt = date('Y-m-d', Mage::getModel('core/date')->timestamp(time()));
        $days = Mage::getStoreConfig(self::XML_PATH_COUPON_EXPIRE);
        $couponExpiryDate = date('Y-m-d', strtotime('+'.trim($days).'days'));

        try {
            $coupon->setId(null)
                ->setRuleId($ruleId)
                ->setUsageLimit(1)
                ->setUsagePerCustomer(1)
                ->setExpirationDate($couponExpiryDate)
                ->setCreatedAt($createdAt)
                ->setType(Mage_SalesRule_Helper_Coupon::COUPON_TYPE_SPECIFIC_AUTOGENERATED)
                ->setCode($uniqueId)
                ->setCustomerId($customerId);
                $coupon->save();

            return $uniqueId;
        } catch (Exception $e) {
            Mage::getSingleton('customer/session')->addError($e->getMessage());
            return;
        }
    }

    public function getCouponData($coupons = null)
    {
        $isLogin = Mage::getSingleton('customer/session')->isLoggedIn();
        $tableName = Mage::getSingleton("core/resource")->getTableName('salesrule/rule');

        if($coupons) {
            $collection = Mage::getResourceModel('salesrule/coupon_collection')
            ->addFieldToFilter('code',array('in'=>array($coupons)))
            ->addGeneratedCouponsFilter();
            $collection->getSelect()->join(array('t2' => $tableName),'main_table.rule_id = t2.rule_id');
        }

        if($isLogin && $coupons == null) {
            $customerId = Mage::getSingleton('customer/session')->getCustomerId();
            $customerCollection = Mage::getSingleton('customer/customer')->load($customerId);

            $collection = Mage::getResourceModel('salesrule/coupon_collection')
            ->addFieldToFilter('customer_id',$customerCollection->getId())
            ->addGeneratedCouponsFilter();
            $collection->getSelect()->join(array('t2' => $tableName),'main_table.rule_id = t2.rule_id',array('t2.name','t2.description'));
        }

        return $collection;
    }
}
